//------------------------------------------------------------------------------ 
// <auto-generated> 
// This code was generated by a tool (Patrik).
// </auto-generated> 
//------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.InteropServices.ComTypes;

namespace Jarvis.Addin.Files.Sources.Uwp
{
    internal static class AppxPackagingInterop
    {
        public enum __MIDL_IUri_0001
        {
            Uri_PROPERTY_ABSOLUTE_URI = 0,
            Uri_PROPERTY_STRING_START = 0,
            Uri_PROPERTY_AUTHORITY = 1,
            Uri_PROPERTY_DISPLAY_URI = 2,
            Uri_PROPERTY_DOMAIN = 3,
            Uri_PROPERTY_EXTENSION = 4,
            Uri_PROPERTY_FRAGMENT = 5,
            Uri_PROPERTY_HOST = 6,
            Uri_PROPERTY_PASSWORD = 7,
            Uri_PROPERTY_PATH = 8,
            Uri_PROPERTY_PATH_AND_QUERY = 9,
            Uri_PROPERTY_QUERY = 10,
            Uri_PROPERTY_RAW_URI = 11,
            Uri_PROPERTY_SCHEME_NAME = 12,
            Uri_PROPERTY_USER_INFO = 13,
            Uri_PROPERTY_STRING_LAST = 14,
            Uri_PROPERTY_USER_NAME = 14,
            Uri_PROPERTY_DWORD_START = 15,
            Uri_PROPERTY_HOST_TYPE = 15,
            Uri_PROPERTY_PORT = 16,
            Uri_PROPERTY_SCHEME = 17,
            Uri_PROPERTY_DWORD_LAST = 18,
            Uri_PROPERTY_ZONE = 18,
        }

        [StructLayout(LayoutKind.Sequential, Pack = 4)]
        public struct _FILETIME
        {
            public uint dwLowDateTime;
            public uint dwHighDateTime;
        }

        [StructLayout(LayoutKind.Sequential, Pack = 8)]
        public struct _LARGE_INTEGER
        {
            public long QuadPart;
        }

        [StructLayout(LayoutKind.Sequential, Pack = 8)]
        public struct _ULARGE_INTEGER
        {
            public ulong QuadPart;
        }

        public enum APPX_BUNDLE_FOOTPRINT_FILE_TYPE
        {
            APPX_BUNDLE_FOOTPRINT_FILE_TYPE_FIRST = 0,
            APPX_BUNDLE_FOOTPRINT_FILE_TYPE_MANIFEST = 0,
            APPX_BUNDLE_FOOTPRINT_FILE_TYPE_BLOCKMAP = 1,
            APPX_BUNDLE_FOOTPRINT_FILE_TYPE_LAST = 2,
            APPX_BUNDLE_FOOTPRINT_FILE_TYPE_SIGNATURE = 2,
        }

        public enum APPX_BUNDLE_PAYLOAD_PACKAGE_TYPE
        {
            APPX_BUNDLE_PAYLOAD_PACKAGE_TYPE_APPLICATION,
            APPX_BUNDLE_PAYLOAD_PACKAGE_TYPE_RESOURCE,
        }

        public enum APPX_CAPABILITIES
        {
            APPX_CAPABILITY_INTERNET_CLIENT = 1,
            APPX_CAPABILITY_INTERNET_CLIENT_SERVER = 2,
            APPX_CAPABILITY_PRIVATE_NETWORK_CLIENT_SERVER = 4,
            APPX_CAPABILITY_DOCUMENTS_LIBRARY = 8,
            APPX_CAPABILITY_PICTURES_LIBRARY = 16,
            APPX_CAPABILITY_VIDEOS_LIBRARY = 32,
            APPX_CAPABILITY_MUSIC_LIBRARY = 64,
            APPX_CAPABILITY_ENTERPRISE_AUTHENTICATION = 128,
            APPX_CAPABILITY_SHARED_USER_CERTIFICATES = 256,
            APPX_CAPABILITY_REMOVABLE_STORAGE = 512,
            APPX_CAPABILITY_APPOINTMENTS = 1024,
            APPX_CAPABILITY_CONTACTS = 2048,
        }

        public enum APPX_COMPRESSION_OPTION
        {
            APPX_COMPRESSION_OPTION_NONE,
            APPX_COMPRESSION_OPTION_NORMAL,
            APPX_COMPRESSION_OPTION_MAXIMUM,
            APPX_COMPRESSION_OPTION_FAST,
            APPX_COMPRESSION_OPTION_SUPERFAST,
        }

        [ComConversionLoss]
        [StructLayout(LayoutKind.Sequential, Pack = 4)]
        public struct APPX_ENCRYPTED_EXEMPTIONS
        {
            public uint count;
            [ComConversionLoss]
            public IntPtr plainTextFiles;
        }

        [StructLayout(LayoutKind.Sequential, Pack = 4)]
        public struct APPX_ENCRYPTED_PACKAGE_SETTINGS
        {
            public uint keyLength;
            [MarshalAs(UnmanagedType.LPWStr)]
            public string encryptionAlgorithm;
            public int useDiffusion;
            [MarshalAs(UnmanagedType.Interface)]
            public IUri blockMapHashAlgorithm;
        }

        [StructLayout(LayoutKind.Sequential, Pack = 4)]
        public struct APPX_ENCRYPTED_PACKAGE_SETTINGS2
        {
            public uint keyLength;
            [MarshalAs(UnmanagedType.LPWStr)]
            public string encryptionAlgorithm;
            [MarshalAs(UnmanagedType.Interface)]
            public IUri blockMapHashAlgorithm;
            public uint options;
        }

        public enum APPX_FOOTPRINT_FILE_TYPE
        {
            APPX_FOOTPRINT_FILE_TYPE_MANIFEST,
            APPX_FOOTPRINT_FILE_TYPE_BLOCKMAP,
            APPX_FOOTPRINT_FILE_TYPE_SIGNATURE,
            APPX_FOOTPRINT_FILE_TYPE_CODEINTEGRITY,
            APPX_FOOTPRINT_FILE_TYPE_CONTENTGROUPMAP,
        }

        [ComConversionLoss]
        [StructLayout(LayoutKind.Sequential, Pack = 4)]
        public struct APPX_KEY_INFO
        {
            public uint keyLength;
            public uint keyIdLength;
            [ComConversionLoss]
            public IntPtr key;
            [ComConversionLoss]
            public IntPtr keyId;
        }

        public enum APPX_PACKAGE_ARCHITECTURE
        {
            APPX_PACKAGE_ARCHITECTURE_X86 = 0,
            APPX_PACKAGE_ARCHITECTURE_ARM = 5,
            APPX_PACKAGE_ARCHITECTURE_X64 = 9,
            APPX_PACKAGE_ARCHITECTURE_NEUTRAL = 11,
            APPX_PACKAGE_ARCHITECTURE_ARM64 = 12,
        }

        [StructLayout(LayoutKind.Sequential, Pack = 4)]
        public struct APPX_PACKAGE_SETTINGS
        {
            public int forceZip32;
            [MarshalAs(UnmanagedType.Interface)]
            public IUri hashMethod;
        }

        public enum DX_FEATURE_LEVEL
        {
            DX_FEATURE_LEVEL_UNSPECIFIED,
            DX_FEATURE_LEVEL_9,
            DX_FEATURE_LEVEL_10,
            DX_FEATURE_LEVEL_11,
        }

        [StructLayout(LayoutKind.Sequential, Pack = 8)]
        public struct tagSTATSTG
        {
            [MarshalAs(UnmanagedType.LPWStr)]
            public string pwcsName;
            public uint type;
            public _ULARGE_INTEGER cbSize;
            public _FILETIME mtime;
            public _FILETIME ctime;
            public _FILETIME atime;
            public uint grfMode;
            public uint grfLocksSupported;
            public Guid clsid;
            public uint grfStateBits;
            public uint reserved;
        }

        public enum Uri_PROPERTY
        {
            Uri_PROPERTY_ABSOLUTE_URI = 0,
            Uri_PROPERTY_STRING_START = 0,
            Uri_PROPERTY_AUTHORITY = 1,
            Uri_PROPERTY_DISPLAY_URI = 2,
            Uri_PROPERTY_DOMAIN = 3,
            Uri_PROPERTY_EXTENSION = 4,
            Uri_PROPERTY_FRAGMENT = 5,
            Uri_PROPERTY_HOST = 6,
            Uri_PROPERTY_PASSWORD = 7,
            Uri_PROPERTY_PATH = 8,
            Uri_PROPERTY_PATH_AND_QUERY = 9,
            Uri_PROPERTY_QUERY = 10,
            Uri_PROPERTY_RAW_URI = 11,
            Uri_PROPERTY_SCHEME_NAME = 12,
            Uri_PROPERTY_USER_INFO = 13,
            Uri_PROPERTY_STRING_LAST = 14,
            Uri_PROPERTY_USER_NAME = 14,
            Uri_PROPERTY_DWORD_START = 15,
            Uri_PROPERTY_HOST_TYPE = 15,
            Uri_PROPERTY_PORT = 16,
            Uri_PROPERTY_SCHEME = 17,
            Uri_PROPERTY_DWORD_LAST = 18,
            Uri_PROPERTY_ZONE = 18,
        }

        [Guid("BBA65864-965F-4A5F-855F-F074BDBF3A7B")]
        [CoClass(typeof(AppxBundleFactoryClass))]
        [ComImport]
        public interface AppxBundleFactory : IAppxBundleFactory
        {
        }

        [TypeLibType(TypeLibTypeFlags.FCanCreate)]
        [Guid("378E0446-5384-43B7-8877-E7DBDD883446")]
        [ClassInterface(ClassInterfaceType.None)]
        [ComImport]
        public class AppxBundleFactoryClass : IAppxBundleFactory, AppxBundleFactory
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            public virtual extern IAppxBundleWriter CreateBundleWriter([MarshalAs(UnmanagedType.Interface), In] IStream outputStream, [In] ulong bundleVersion);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            public virtual extern IAppxBundleReader CreateBundleReader([MarshalAs(UnmanagedType.Interface), In] IStream inputStream);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            public virtual extern IAppxBundleManifestReader CreateBundleManifestReader([MarshalAs(UnmanagedType.Interface), In] IStream inputStream);
        }

        [CoClass(typeof(AppxEncryptionFactoryClass))]
        [Guid("80E8E04D-8C88-44AE-A011-7CADF6FB2E72")]
        [ComImport]
        public interface AppxEncryptionFactory : IAppxEncryptionFactory
        {
        }

        [TypeLibType(TypeLibTypeFlags.FCanCreate)]
        [ClassInterface(ClassInterfaceType.None)]
        [Guid("DC664FDD-D868-46EE-8780-8D196CB739F7")]
        [ComImport]
        public class AppxEncryptionFactoryClass : IAppxEncryptionFactory, AppxEncryptionFactory, IAppxEncryptionFactory3, IAppxEncryptionFactory2
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            public virtual extern void EncryptPackage([MarshalAs(UnmanagedType.Interface), In] IStream inputStream, [MarshalAs(UnmanagedType.Interface), In] IStream outputStream, [In] ref APPX_ENCRYPTED_PACKAGE_SETTINGS settings, [In] ref APPX_KEY_INFO keyInfo, [In] ref APPX_ENCRYPTED_EXEMPTIONS exemptedFiles);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            public virtual extern void DecryptPackage([MarshalAs(UnmanagedType.Interface), In] IStream inputStream, [MarshalAs(UnmanagedType.Interface), In] IStream outputStream, [In] ref APPX_KEY_INFO keyInfo);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            public virtual extern IAppxEncryptedPackageWriter CreateEncryptedPackageWriter([MarshalAs(UnmanagedType.Interface), In] IStream outputStream, [MarshalAs(UnmanagedType.Interface), In] IStream manifestStream, [In] ref APPX_ENCRYPTED_PACKAGE_SETTINGS settings, [In] ref APPX_KEY_INFO keyInfo, [In] ref APPX_ENCRYPTED_EXEMPTIONS exemptedFiles);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            public virtual extern IAppxPackageReader CreateEncryptedPackageReader([MarshalAs(UnmanagedType.Interface), In] IStream inputStream, [In] ref APPX_KEY_INFO keyInfo);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            public virtual extern void EncryptBundle([MarshalAs(UnmanagedType.Interface), In] IStream inputStream, [MarshalAs(UnmanagedType.Interface), In] IStream outputStream, [In] ref APPX_ENCRYPTED_PACKAGE_SETTINGS settings, [In] ref APPX_KEY_INFO keyInfo, [In] ref APPX_ENCRYPTED_EXEMPTIONS exemptedFiles);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            public virtual extern void DecryptBundle([MarshalAs(UnmanagedType.Interface), In] IStream inputStream, [MarshalAs(UnmanagedType.Interface), In] IStream outputStream, [In] ref APPX_KEY_INFO keyInfo);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            public virtual extern IAppxEncryptedBundleWriter CreateEncryptedBundleWriter([MarshalAs(UnmanagedType.Interface), In] IStream outputStream, [In] ulong bundleVersion, [In] ref APPX_ENCRYPTED_PACKAGE_SETTINGS settings, [In] ref APPX_KEY_INFO keyInfo, [In] ref APPX_ENCRYPTED_EXEMPTIONS exemptedFiles);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            public virtual extern IAppxBundleReader CreateEncryptedBundleReader([MarshalAs(UnmanagedType.Interface), In] IStream inputStream, [In] ref APPX_KEY_INFO keyInfo);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            public virtual extern void EncryptPackage([MarshalAs(UnmanagedType.Interface), In] IStream inputStream, [MarshalAs(UnmanagedType.Interface), In] IStream outputStream, [In] ref APPX_ENCRYPTED_PACKAGE_SETTINGS2 settings, [In] ref APPX_KEY_INFO keyInfo, [In] ref APPX_ENCRYPTED_EXEMPTIONS exemptedFiles);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            public virtual extern IAppxEncryptedPackageWriter CreateEncryptedPackageWriter([MarshalAs(UnmanagedType.Interface), In] IStream outputStream, [MarshalAs(UnmanagedType.Interface), In] IStream manifestStream, [MarshalAs(UnmanagedType.Interface), In] IStream contentGroupMapStream, [In] ref APPX_ENCRYPTED_PACKAGE_SETTINGS2 settings, [In] ref APPX_KEY_INFO keyInfo, [In] ref APPX_ENCRYPTED_EXEMPTIONS exemptedFiles);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            public virtual extern void EncryptBundle([MarshalAs(UnmanagedType.Interface), In] IStream inputStream, [MarshalAs(UnmanagedType.Interface), In] IStream outputStream, [In] ref APPX_ENCRYPTED_PACKAGE_SETTINGS2 settings, [In] ref APPX_KEY_INFO keyInfo, [In] ref APPX_ENCRYPTED_EXEMPTIONS exemptedFiles);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            public virtual extern IAppxEncryptedBundleWriter CreateEncryptedBundleWriter([MarshalAs(UnmanagedType.Interface), In] IStream outputStream, [In] ulong bundleVersion, [In] ref APPX_ENCRYPTED_PACKAGE_SETTINGS2 settings, [In] ref APPX_KEY_INFO keyInfo, [In] ref APPX_ENCRYPTED_EXEMPTIONS exemptedFiles);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            public virtual extern IAppxEncryptedPackageWriter CreateEncryptedPackageWriter([MarshalAs(UnmanagedType.Interface), In] IStream outputStream, [MarshalAs(UnmanagedType.Interface), In] IStream manifestStream, [MarshalAs(UnmanagedType.Interface), In] IStream contentGroupMapStream, [In] ref APPX_ENCRYPTED_PACKAGE_SETTINGS settings, [In] ref APPX_KEY_INFO keyInfo, [In] ref APPX_ENCRYPTED_EXEMPTIONS exemptedFiles);
        }

        [CoClass(typeof(AppxFactoryClass))]
        [Guid("BEB94909-E451-438B-B5A7-D79E767B75D8")]
        [ComImport]
        public interface AppxFactory : IAppxFactory
        {
        }

        [ClassInterface(ClassInterfaceType.None)]
        [Guid("5842A140-FF9F-4166-8F5C-62F5B7B0C781")]
        [TypeLibType(TypeLibTypeFlags.FCanCreate)]
        [ComImport]
        public class AppxFactoryClass : IAppxFactory, AppxFactory, IAppxFactory2
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            public virtual extern IAppxPackageWriter CreatePackageWriter([MarshalAs(UnmanagedType.Interface), In] IStream outputStream, [In] ref APPX_PACKAGE_SETTINGS settings);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            public virtual extern IAppxPackageReader CreatePackageReader([MarshalAs(UnmanagedType.Interface), In] IStream inputStream);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            public virtual extern IAppxManifestReader CreateManifestReader([MarshalAs(UnmanagedType.Interface), In] IStream inputStream);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            public virtual extern IAppxBlockMapReader CreateBlockMapReader([MarshalAs(UnmanagedType.Interface), In] IStream inputStream);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            public virtual extern IAppxBlockMapReader CreateValidatedBlockMapReader([MarshalAs(UnmanagedType.Interface), In] IStream blockMapStream, [MarshalAs(UnmanagedType.LPWStr), In] string signatureFileName);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            public virtual extern IAppxContentGroupMapReader CreateContentGroupMapReader([MarshalAs(UnmanagedType.Interface), In] IStream inputStream);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            public virtual extern IAppxSourceContentGroupMapReader CreateSourceContentGroupMapReader([MarshalAs(UnmanagedType.Interface), In] IStream inputStream);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            public virtual extern IAppxContentGroupMapWriter CreateContentGroupMapWriter([MarshalAs(UnmanagedType.Interface), In] IStream stream);
        }

        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [ComConversionLoss]
        [Guid("75CF3930-3244-4FE0-A8C8-E0BCB270B889")]
        [ComImport]
        public interface IAppxBlockMapBlock
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            IntPtr GetHash(out uint bufferSize);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            uint GetCompressedSize();
        }

        [Guid("6B429B5B-36EF-479E-B9EB-0C1482B49E16")]
        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [ComImport]
        public interface IAppxBlockMapBlocksEnumerator
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxBlockMapBlock GetCurrent();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            int GetHasCurrent();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            int MoveNext();
        }

        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [Guid("277672AC-4F63-42C1-8ABC-BEAE3600EB59")]
        [ComImport]
        public interface IAppxBlockMapFile
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxBlockMapBlocksEnumerator GetBlocks();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            uint GetLocalFileHeaderSize();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.LPWStr)]
            string GetName();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            ulong GetUncompressedSize();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            int ValidateFileHash([MarshalAs(UnmanagedType.Interface), In] IStream fileStream);
        }

        [Guid("02B856A2-4262-4070-BACB-1A8CBBC42305")]
        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [ComImport]
        public interface IAppxBlockMapFilesEnumerator
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxBlockMapFile GetCurrent();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            int GetHasCurrent();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            int MoveNext();
        }

        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [Guid("5EFEC991-BCA3-42D1-9EC2-E92D609EC22A")]
        [ComImport]
        public interface IAppxBlockMapReader
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxBlockMapFile GetFile([MarshalAs(UnmanagedType.LPWStr), In] string fileName);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxBlockMapFilesEnumerator GetFiles();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IUri GetHashMethod();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IStream GetStream();
        }

        [Guid("BBA65864-965F-4A5F-855F-F074BDBF3A7B")]
        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [ComImport]
        public interface IAppxBundleFactory
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxBundleWriter CreateBundleWriter([MarshalAs(UnmanagedType.Interface), In] IStream outputStream, [In] ulong bundleVersion);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxBundleReader CreateBundleReader([MarshalAs(UnmanagedType.Interface), In] IStream inputStream);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxBundleManifestReader CreateBundleManifestReader([MarshalAs(UnmanagedType.Interface), In] IStream inputStream);
        }

        [Guid("54CD06C1-268F-40BB-8ED2-757A9EBAEC8D")]
        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [ComImport]
        public interface IAppxBundleManifestPackageInfo
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            APPX_BUNDLE_PAYLOAD_PACKAGE_TYPE GetPackageType();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxManifestPackageId GetPackageId();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.LPWStr)]
            string GetFileName();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            ulong GetOffset();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            ulong GetSize();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxManifestQualifiedResourcesEnumerator GetResources();
        }

        [Guid("F9B856EE-49A6-4E19-B2B0-6A2406D63A32")]
        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [ComImport]
        public interface IAppxBundleManifestPackageInfoEnumerator
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxBundleManifestPackageInfo GetCurrent();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            int GetHasCurrent();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            int MoveNext();
        }

        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [Guid("CF0EBBC1-CC99-4106-91EB-E67462E04FB0")]
        [ComImport]
        public interface IAppxBundleManifestReader
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxManifestPackageId GetPackageId();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxBundleManifestPackageInfoEnumerator GetPackageInfoItems();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IStream GetStream();
        }

        [Guid("DD75B8C0-BA76-43B0-AE0F-68656A1DC5C8")]
        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [ComImport]
        public interface IAppxBundleReader
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxFile GetFootprintFile([In] APPX_BUNDLE_FOOTPRINT_FILE_TYPE fileType);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxBlockMapReader GetBlockMap();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxBundleManifestReader GetManifest();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxFilesEnumerator GetPayloadPackages();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxFile GetPayloadPackage([MarshalAs(UnmanagedType.LPWStr), In] string fileName);
        }

        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [Guid("EC446FE8-BFEC-4C64-AB4F-49F038F0C6D2")]
        [ComImport]
        public interface IAppxBundleWriter
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void AddPayloadPackage([MarshalAs(UnmanagedType.LPWStr), In] string fileName, [MarshalAs(UnmanagedType.Interface), In] IStream packageStream);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void Close();
        }

        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [Guid("328F6468-C04F-4E3C-B6FA-6B8D27F3003A")]
        [ComImport]
        public interface IAppxContentGroup
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.LPWStr)]
            string GetName();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxContentGroupFilesEnumerator GetFiles();
        }

        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [Guid("1A09A2FD-7440-44EB-8C84-848205A6A1CC")]
        [ComImport]
        public interface IAppxContentGroupFilesEnumerator
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.LPWStr)]
            string GetCurrent();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            int GetHasCurrent();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            int MoveNext();
        }

        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [Guid("418726D8-DD99-4F5D-9886-157ADD20DE01")]
        [ComImport]
        public interface IAppxContentGroupMapReader
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxContentGroup GetRequiredGroup();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxContentGroupsEnumerator GetAutomaticGroups();
        }

        [Guid("D07AB776-A9DE-4798-8C14-3DB31E687C78")]
        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [ComImport]
        public interface IAppxContentGroupMapWriter
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void AddAutomaticGroup([MarshalAs(UnmanagedType.LPWStr), In] string groupName);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void AddAutomaticFile([MarshalAs(UnmanagedType.LPWStr), In] string fileName);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void Close();
        }

        [Guid("3264E477-16D1-4D63-823E-7D2984696634")]
        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [ComImport]
        public interface IAppxContentGroupsEnumerator
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxContentGroup GetCurrent();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            int GetHasCurrent();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            int MoveNext();
        }

        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [Guid("80B0902F-7BF0-4117-B8C6-4279EF81EE77")]
        [ComImport]
        public interface IAppxEncryptedBundleWriter
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void AddPayloadPackageEncrypted([MarshalAs(UnmanagedType.LPWStr), In] string fileName, [MarshalAs(UnmanagedType.Interface), In] IStream packageStream);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void Close();
        }

        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [Guid("F43D0B0B-1379-40E2-9B29-682EA2BF42AF")]
        [ComImport]
        public interface IAppxEncryptedPackageWriter
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void AddPayloadFileEncrypted([MarshalAs(UnmanagedType.LPWStr), In] string fileName, [In] APPX_COMPRESSION_OPTION compressionOption, [MarshalAs(UnmanagedType.Interface), In] IStream inputStream);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void Close();
        }

        [Guid("80E8E04D-8C88-44AE-A011-7CADF6FB2E72")]
        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [ComImport]
        public interface IAppxEncryptionFactory
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void EncryptPackage([MarshalAs(UnmanagedType.Interface), In] IStream inputStream, [MarshalAs(UnmanagedType.Interface), In] IStream outputStream, [In] ref APPX_ENCRYPTED_PACKAGE_SETTINGS settings, [In] ref APPX_KEY_INFO keyInfo, [In] ref APPX_ENCRYPTED_EXEMPTIONS exemptedFiles);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void DecryptPackage([MarshalAs(UnmanagedType.Interface), In] IStream inputStream, [MarshalAs(UnmanagedType.Interface), In] IStream outputStream, [In] ref APPX_KEY_INFO keyInfo);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxEncryptedPackageWriter CreateEncryptedPackageWriter([MarshalAs(UnmanagedType.Interface), In] IStream outputStream, [MarshalAs(UnmanagedType.Interface), In] IStream manifestStream, [In] ref APPX_ENCRYPTED_PACKAGE_SETTINGS settings, [In] ref APPX_KEY_INFO keyInfo, [In] ref APPX_ENCRYPTED_EXEMPTIONS exemptedFiles);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxPackageReader CreateEncryptedPackageReader([MarshalAs(UnmanagedType.Interface), In] IStream inputStream, [In] ref APPX_KEY_INFO keyInfo);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void EncryptBundle([MarshalAs(UnmanagedType.Interface), In] IStream inputStream, [MarshalAs(UnmanagedType.Interface), In] IStream outputStream, [In] ref APPX_ENCRYPTED_PACKAGE_SETTINGS settings, [In] ref APPX_KEY_INFO keyInfo, [In] ref APPX_ENCRYPTED_EXEMPTIONS exemptedFiles);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void DecryptBundle([MarshalAs(UnmanagedType.Interface), In] IStream inputStream, [MarshalAs(UnmanagedType.Interface), In] IStream outputStream, [In] ref APPX_KEY_INFO keyInfo);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxEncryptedBundleWriter CreateEncryptedBundleWriter([MarshalAs(UnmanagedType.Interface), In] IStream outputStream, [In] ulong bundleVersion, [In] ref APPX_ENCRYPTED_PACKAGE_SETTINGS settings, [In] ref APPX_KEY_INFO keyInfo, [In] ref APPX_ENCRYPTED_EXEMPTIONS exemptedFiles);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxBundleReader CreateEncryptedBundleReader([MarshalAs(UnmanagedType.Interface), In] IStream inputStream, [In] ref APPX_KEY_INFO keyInfo);
        }

        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [Guid("C1B11EEE-C4BA-4AB2-A55D-D015FE8FF64F")]
        [ComImport]
        public interface IAppxEncryptionFactory2
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxEncryptedPackageWriter CreateEncryptedPackageWriter([MarshalAs(UnmanagedType.Interface), In] IStream outputStream, [MarshalAs(UnmanagedType.Interface), In] IStream manifestStream, [MarshalAs(UnmanagedType.Interface), In] IStream contentGroupMapStream, [In] ref APPX_ENCRYPTED_PACKAGE_SETTINGS settings, [In] ref APPX_KEY_INFO keyInfo, [In] ref APPX_ENCRYPTED_EXEMPTIONS exemptedFiles);
        }

        [Guid("09EDCA37-CD64-47D6-B7E8-1CB11D4F7E05")]
        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [ComImport]
        public interface IAppxEncryptionFactory3
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void EncryptPackage([MarshalAs(UnmanagedType.Interface), In] IStream inputStream, [MarshalAs(UnmanagedType.Interface), In] IStream outputStream, [In] ref APPX_ENCRYPTED_PACKAGE_SETTINGS2 settings, [In] ref APPX_KEY_INFO keyInfo, [In] ref APPX_ENCRYPTED_EXEMPTIONS exemptedFiles);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxEncryptedPackageWriter CreateEncryptedPackageWriter([MarshalAs(UnmanagedType.Interface), In] IStream outputStream, [MarshalAs(UnmanagedType.Interface), In] IStream manifestStream, [MarshalAs(UnmanagedType.Interface), In] IStream contentGroupMapStream, [In] ref APPX_ENCRYPTED_PACKAGE_SETTINGS2 settings, [In] ref APPX_KEY_INFO keyInfo, [In] ref APPX_ENCRYPTED_EXEMPTIONS exemptedFiles);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void EncryptBundle([MarshalAs(UnmanagedType.Interface), In] IStream inputStream, [MarshalAs(UnmanagedType.Interface), In] IStream outputStream, [In] ref APPX_ENCRYPTED_PACKAGE_SETTINGS2 settings, [In] ref APPX_KEY_INFO keyInfo, [In] ref APPX_ENCRYPTED_EXEMPTIONS exemptedFiles);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxEncryptedBundleWriter CreateEncryptedBundleWriter([MarshalAs(UnmanagedType.Interface), In] IStream outputStream, [In] ulong bundleVersion, [In] ref APPX_ENCRYPTED_PACKAGE_SETTINGS2 settings, [In] ref APPX_KEY_INFO keyInfo, [In] ref APPX_ENCRYPTED_EXEMPTIONS exemptedFiles);
        }

        [Guid("BEB94909-E451-438B-B5A7-D79E767B75D8")]
        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [ComImport]
        public interface IAppxFactory
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxPackageWriter CreatePackageWriter([MarshalAs(UnmanagedType.Interface), In] IStream outputStream, [In] ref APPX_PACKAGE_SETTINGS settings);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxPackageReader CreatePackageReader([MarshalAs(UnmanagedType.Interface), In] IStream inputStream);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxManifestReader CreateManifestReader([MarshalAs(UnmanagedType.Interface), In] IStream inputStream);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxBlockMapReader CreateBlockMapReader([MarshalAs(UnmanagedType.Interface), In] IStream inputStream);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxBlockMapReader CreateValidatedBlockMapReader([MarshalAs(UnmanagedType.Interface), In] IStream blockMapStream, [MarshalAs(UnmanagedType.LPWStr), In] string signatureFileName);
        }

        [Guid("F1346DF2-C282-4E22-B918-743A929A8D55")]
        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [ComImport]
        public interface IAppxFactory2
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxContentGroupMapReader CreateContentGroupMapReader([MarshalAs(UnmanagedType.Interface), In] IStream inputStream);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxSourceContentGroupMapReader CreateSourceContentGroupMapReader([MarshalAs(UnmanagedType.Interface), In] IStream inputStream);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxContentGroupMapWriter CreateContentGroupMapWriter([MarshalAs(UnmanagedType.Interface), In] IStream stream);
        }

        [Guid("91DF827B-94FD-468F-827B-57F41B2F6F2E")]
        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [ComImport]
        public interface IAppxFile
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            APPX_COMPRESSION_OPTION GetCompressionOption();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.LPWStr)]
            string GetContentType();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.LPWStr)]
            string GetName();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            ulong GetSize();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IStream GetStream();
        }

        [Guid("F007EEAF-9831-411C-9847-917CDC62D1FE")]
        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [ComImport]
        public interface IAppxFilesEnumerator
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxFile GetCurrent();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            int GetHasCurrent();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            int MoveNext();
        }

        [Guid("5DA89BF4-3773-46BE-B650-7E744863B7E8")]
        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [ComImport]
        public interface IAppxManifestApplication
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.LPWStr)]
            string GetStringValue([MarshalAs(UnmanagedType.LPWStr), In] string name);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.LPWStr)]
            string GetAppUserModelId();
        }

        [Guid("9EB8A55A-F04B-4D0D-808D-686185D4847A")]
        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [ComImport]
        public interface IAppxManifestApplicationsEnumerator
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxManifestApplication GetCurrent();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            int GetHasCurrent();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            int MoveNext();
        }

        [Guid("30204541-427B-4A1C-BACF-655BF463A540")]
        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [ComImport]
        public interface IAppxManifestDeviceCapabilitiesEnumerator
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.LPWStr)]
            string GetCurrent();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            int GetHasCurrent();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            int MoveNext();
        }

        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [Guid("B43BBCF9-65A6-42DD-BAC0-8C6741E7F5A4")]
        [ComImport]
        public interface IAppxManifestPackageDependenciesEnumerator
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxManifestPackageDependency GetCurrent();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            int GetHasCurrent();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            int MoveNext();
        }

        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [Guid("E4946B59-733E-43F0-A724-3BDE4C1285A0")]
        [ComImport]
        public interface IAppxManifestPackageDependency
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.LPWStr)]
            string GetName();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.LPWStr)]
            string GetPublisher();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            ulong GetMinVersion();
        }

        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [Guid("283CE2D7-7153-4A91-9649-7A0F7240945F")]
        [ComImport]
        public interface IAppxManifestPackageId
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.LPWStr)]
            string GetName();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            APPX_PACKAGE_ARCHITECTURE GetArchitecture();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.LPWStr)]
            string GetPublisher();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            ulong GetVersion();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.LPWStr)]
            string GetResourceId();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            int ComparePublisher([MarshalAs(UnmanagedType.LPWStr), In] string other);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.LPWStr)]
            string GetPackageFullName();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.LPWStr)]
            string GetPackageFamilyName();
        }

        [Guid("03FAF64D-F26F-4B2C-AAF7-8FE7789B8BCA")]
        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [ComImport]
        public interface IAppxManifestProperties
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            int GetBoolValue([MarshalAs(UnmanagedType.LPWStr), In] string name);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.LPWStr)]
            string GetStringValue([MarshalAs(UnmanagedType.LPWStr), In] string name);
        }

        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [Guid("3B53A497-3C5C-48D1-9EA3-BB7EAC8CD7D4")]
        [ComImport]
        public interface IAppxManifestQualifiedResource
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.LPWStr)]
            string GetLanguage();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            uint GetScale();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            DX_FEATURE_LEVEL GetDXFeatureLevel();
        }

        [Guid("8EF6ADFE-3762-4A8F-9373-2FC5D444C8D2")]
        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [ComImport]
        public interface IAppxManifestQualifiedResourcesEnumerator
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxManifestQualifiedResource GetCurrent();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            int GetHasCurrent();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            int MoveNext();
        }

        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [Guid("4E1BD148-55A0-4480-A3D1-15544710637C")]
        [ComImport]
        public interface IAppxManifestReader
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxManifestPackageId GetPackageId();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxManifestProperties GetProperties();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxManifestPackageDependenciesEnumerator GetPackageDependencies();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            APPX_CAPABILITIES GetCapabilities();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxManifestResourcesEnumerator GetResources();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxManifestDeviceCapabilitiesEnumerator GetDeviceCapabilities();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            ulong GetPrerequisite([MarshalAs(UnmanagedType.LPWStr), In] string name);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxManifestApplicationsEnumerator GetApplications();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IStream GetStream();
        }

        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [Guid("DE4DFBBD-881A-48BB-858C-D6F2BAEAE6ED")]
        [ComImport]
        public interface IAppxManifestResourcesEnumerator
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.LPWStr)]
            string GetCurrent();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            int GetHasCurrent();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            int MoveNext();
        }

        [Guid("B5C49650-99BC-481C-9A34-3D53A4106708")]
        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [ComImport]
        public interface IAppxPackageReader
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxBlockMapReader GetBlockMap();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxFile GetFootprintFile([In] APPX_FOOTPRINT_FILE_TYPE type);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxFile GetPayloadFile([MarshalAs(UnmanagedType.LPWStr), In] string fileName);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxFilesEnumerator GetPayloadFiles();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxManifestReader GetManifest();
        }

        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [Guid("9099E33B-246F-41E4-881A-008EB613F858")]
        [ComImport]
        public interface IAppxPackageWriter
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void AddPayloadFile([MarshalAs(UnmanagedType.LPWStr), In] string fileName, [MarshalAs(UnmanagedType.LPWStr), In] string contentType, [In] APPX_COMPRESSION_OPTION compressionOption, [MarshalAs(UnmanagedType.Interface), In] IStream inputStream);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void Close([MarshalAs(UnmanagedType.Interface), In] IStream manifest);
        }

        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [Guid("F329791D-540B-4A9F-BC75-3282B7D73193")]
        [ComImport]
        public interface IAppxSourceContentGroupMapReader
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxContentGroup GetRequiredGroup();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            [return: MarshalAs(UnmanagedType.Interface)]
            IAppxContentGroupsEnumerator GetAutomaticGroups();
        }

        //[Guid("0C733A30-2A1C-11CE-ADE5-00AA0044773D")]
        //[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        //[ComImport]
        //public interface ISequentialStream
        //{
        //    [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
        //    void RemoteRead(out byte pv, [In] uint cb, out uint pcbRead);

        //    [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
        //    void RemoteWrite([In] ref byte pv, [In] uint cb, out uint pcbWritten);
        //}

        //[Guid("0000000C-0000-0000-C000-000000000046")]
        //[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        //[ComImport]
        //public interface IStream : ISequentialStream
        //{
        //    [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
        //    new void RemoteRead(out byte pv, [In] uint cb, out uint pcbRead);

        //    [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
        //    new void RemoteWrite([In] ref byte pv, [In] uint cb, out uint pcbWritten);

        //    [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
        //    void RemoteSeek([In] _LARGE_INTEGER dlibMove, [In] uint dwOrigin, out _ULARGE_INTEGER plibNewPosition);

        //    [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
        //    void SetSize([In] _ULARGE_INTEGER libNewSize);

        //    [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
        //    void RemoteCopyTo([MarshalAs(UnmanagedType.Interface), In] IStream pstm, [In] _ULARGE_INTEGER cb, out _ULARGE_INTEGER pcbRead, out _ULARGE_INTEGER pcbWritten);

        //    [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
        //    void Commit([In] uint grfCommitFlags);

        //    [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
        //    void Revert();

        //    [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
        //    void LockRegion([In] _ULARGE_INTEGER libOffset, [In] _ULARGE_INTEGER cb, [In] uint dwLockType);

        //    [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
        //    void UnlockRegion([In] _ULARGE_INTEGER libOffset, [In] _ULARGE_INTEGER cb, [In] uint dwLockType);

        //    [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
        //    void Stat(out tagSTATSTG pstatstg, [In] uint grfStatFlag);

        //    [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
        //    void Clone([MarshalAs(UnmanagedType.Interface)] out IStream ppstm);
        //}

        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [Guid("A39EE748-6A27-4817-A6F2-13914BEF5890")]
        [ComImport]
        public interface IUri
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void GetPropertyBSTR([ComAliasName("Jarvis.Uwp.Uri_PROPERTY"), In] Uri_PROPERTY uriProp, [MarshalAs(UnmanagedType.BStr)] out string pbstrProperty, [In] uint dwFlags);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void GetPropertyLength([ComAliasName("Jarvis.Uwp.Uri_PROPERTY"), In] Uri_PROPERTY uriProp, out uint pcchProperty, [In] uint dwFlags);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void GetPropertyDWORD([ComAliasName("Jarvis.Uwp.Uri_PROPERTY"), In] Uri_PROPERTY uriProp, out uint pdwProperty, [In] uint dwFlags);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void HasProperty([ComAliasName("Jarvis.Uwp.Uri_PROPERTY"), In] Uri_PROPERTY uriProp, out int pfHasProperty);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void GetAbsoluteUri([MarshalAs(UnmanagedType.BStr)] out string pbstrAbsoluteUri);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void GetAuthority([MarshalAs(UnmanagedType.BStr)] out string pbstrAuthority);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void GetDisplayUri([MarshalAs(UnmanagedType.BStr)] out string pbstrDisplayString);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void GetDomain([MarshalAs(UnmanagedType.BStr)] out string pbstrDomain);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void GetExtension([MarshalAs(UnmanagedType.BStr)] out string pbstrExtension);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void GetFragment([MarshalAs(UnmanagedType.BStr)] out string pbstrFragment);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void GetHost([MarshalAs(UnmanagedType.BStr)] out string pbstrHost);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void GetPassword([MarshalAs(UnmanagedType.BStr)] out string pbstrPassword);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void GetPath([MarshalAs(UnmanagedType.BStr)] out string pbstrPath);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void GetPathAndQuery([MarshalAs(UnmanagedType.BStr)] out string pbstrPathAndQuery);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void GetQuery([MarshalAs(UnmanagedType.BStr)] out string pbstrQuery);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void GetRawUri([MarshalAs(UnmanagedType.BStr)] out string pbstrRawUri);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void GetSchemeName([MarshalAs(UnmanagedType.BStr)] out string pbstrSchemeName);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void GetUserInfo([MarshalAs(UnmanagedType.BStr)] out string pbstrUserInfo);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void GetUserName([MarshalAs(UnmanagedType.BStr)] out string pbstrUserName);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void GetHostType(out uint pdwHostType);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void GetPort(out uint pdwPort);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void GetScheme(out uint pdwScheme);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void GetZone(out uint pdwZone);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void GetProperties(out uint pdwFlags);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void IsEqual([MarshalAs(UnmanagedType.Interface), In] IUri pUri, out int pfEqual);
        }
    }
}
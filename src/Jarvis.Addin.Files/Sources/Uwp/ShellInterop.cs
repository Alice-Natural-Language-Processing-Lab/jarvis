//------------------------------------------------------------------------------ 
// <auto-generated> 
// This code was generated by a tool (Patrik).
// </auto-generated> 
//------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.InteropServices.ComTypes;

// https://msdn.microsoft.com/en-us/library/windows/desktop/hh706902(v=vs.85).aspx
namespace Jarvis.Addin.Files.Sources.Uwp
{
    public static class ShellInterop
    {
        public enum ACTIVATEOPTIONS
        {
            AO_NONE = 0,
            AO_DESIGNMODE = 1,
            AO_NOERRORUI = 2,
            AO_NOSPLASHSCREEN = 4,
        }

        public enum GETPROPERTYSTOREFLAGS
        {
            GPS_DEFAULT = 0,
            GPS_HANDLERPROPERTIESONLY = 1,
            GPS_READWRITE = 2,
            GPS_TEMPORARY = 4,
            GPS_FASTPROPERTIESONLY = 8,
            GPS_OPENSLOWITEM = 16,
            GPS_DELAYCREATION = 32,
            GPS_BESTEFFORT = 64,
            GPS_NO_OPLOCK = 128,
            GPS_PREFERQUERYPROPERTIES = 256,
            GPS_EXTRINSICPROPERTIES = 512,
            GPS_EXTRINSICPROPERTIESONLY = 1024,
            GPS_MASK_VALID = 2047,
        }

        public enum SIATTRIBFLAGS
        {
            SIATTRIBFLAGS_AND = 1,
            SIATTRIBFLAGS_OR = 2,
            SIATTRIBFLAGS_APPCOMPAT = 3,
            SIATTRIBFLAGS_MASK = 3,
            SIATTRIBFLAGS_ALLITEMS = 16384,
        }

        public enum _SIGDN
        {
            SIGDN_PARENTRELATIVEPARSING = -2147385343,
            SIGDN_DESKTOPABSOLUTEPARSING = -2147319808,
            SIGDN_PARENTRELATIVEEDITING = -2147282943,
            SIGDN_DESKTOPABSOLUTEEDITING = -2147172352,
            SIGDN_FILESYSPATH = -2147123200,
            SIGDN_URL = -2147057664,
            SIGDN_PARENTRELATIVEFORADDRESSBAR = -2146975743,
            SIGDN_PARENTRELATIVE = -2146959359,
            SIGDN_PARENTRELATIVEFORUI = -2146877439,
            SIGDN_NORMALDISPLAY = 0,
        }

        [StructLayout(LayoutKind.Sequential, Pack = 4)]
        public struct _tagpropertykey
        {
            public Guid fmtid;
            public uint pid;
        }

        [Guid("70629033-E363-4A28-A567-0DB78006E6D7")]
        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [ComImport]
        public interface IEnumShellItems
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void RemoteNext([In] uint celt, [MarshalAs(UnmanagedType.Interface)] out IShellItem rgelt, out uint pceltFetched);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void Skip([In] uint celt);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void Reset();

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void Clone([MarshalAs(UnmanagedType.Interface)] out IEnumShellItems ppenum);
        }

        [Guid("43826D1E-E718-42EE-BC55-A1E261C37BFE")]
        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [ComImport]
        public interface IShellItem
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void BindToHandler([MarshalAs(UnmanagedType.Interface), In] IBindCtx pbc, [In] ref Guid bhid, [In] ref Guid riid, out IntPtr ppv);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void GetParent([MarshalAs(UnmanagedType.Interface)] out IShellItem ppsi);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void GetDisplayName([In] _SIGDN sigdnName, [MarshalAs(UnmanagedType.LPWStr)] out string ppszName);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void GetAttributes([In] uint sfgaoMask, out uint psfgaoAttribs);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void Compare([MarshalAs(UnmanagedType.Interface), In] IShellItem psi, [In] uint hint, out int piOrder);
        }

        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [Guid("B63EA76D-1F85-456F-A19C-48159EFA858B")]
        [ComImport]
        public interface IShellItemArray
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void BindToHandler([MarshalAs(UnmanagedType.Interface), In] IBindCtx pbc, [In] ref Guid bhid, [In] ref Guid riid, out IntPtr ppvOut);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void GetPropertyStore([In] GETPROPERTYSTOREFLAGS Flags, [In] ref Guid riid, out IntPtr ppv);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void GetPropertyDescriptionList([In] ref _tagpropertykey keyType, [In] ref Guid riid, out IntPtr ppv);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void GetAttributes([In] SIATTRIBFLAGS AttribFlags, [In] uint sfgaoMask, out uint psfgaoAttribs);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void GetCount(out uint pdwNumItems);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void GetItemAt([In] uint dwIndex, [MarshalAs(UnmanagedType.Interface)] out IShellItem ppsi);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void EnumItems([MarshalAs(UnmanagedType.Interface)] out IEnumShellItems ppenumShellItems);
        }

        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        [Guid("2E941141-7F97-4756-BA1D-9DECDE894A3D")]
        [ComImport]
        public interface IApplicationActivationManager
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void ActivateApplication([MarshalAs(UnmanagedType.LPWStr), In] string appUserModelId, [MarshalAs(UnmanagedType.LPWStr), In] string arguments, [In] ACTIVATEOPTIONS options, out uint processId);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void ActivateForFile([MarshalAs(UnmanagedType.LPWStr), In] string appUserModelId, [MarshalAs(UnmanagedType.Interface), In] IShellItemArray itemArray, [MarshalAs(UnmanagedType.LPWStr), In] string verb, out uint processId);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            void ActivateForProtocol([MarshalAs(UnmanagedType.LPWStr), In] string appUserModelId, [MarshalAs(UnmanagedType.Interface), In] IShellItemArray itemArray, out uint processId);
        }

        [Guid("2E941141-7F97-4756-BA1D-9DECDE894A3D")]
        [CoClass(typeof(ApplicationActivationManagerClass))]
        [ComImport]
        public interface ApplicationActivationManager : IApplicationActivationManager
        {
        }

        [TypeLibType(TypeLibTypeFlags.FCanCreate)]
        [ClassInterface(ClassInterfaceType.None)]
        [Guid("45BA127D-10A8-46EA-8AB7-56EA9078943C")]
        [ComImport]
        public class ApplicationActivationManagerClass : IApplicationActivationManager, ApplicationActivationManager
        {
            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            public virtual extern void ActivateApplication([MarshalAs(UnmanagedType.LPWStr), In] string appUserModelId, [MarshalAs(UnmanagedType.LPWStr), In] string arguments, [In] ACTIVATEOPTIONS options, out uint processId);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            public virtual extern void ActivateForFile([MarshalAs(UnmanagedType.LPWStr), In] string appUserModelId, [MarshalAs(UnmanagedType.Interface), In] IShellItemArray itemArray, [MarshalAs(UnmanagedType.LPWStr), In] string verb, out uint processId);

            [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
            public virtual extern void ActivateForProtocol([MarshalAs(UnmanagedType.LPWStr), In] string appUserModelId, [MarshalAs(UnmanagedType.Interface), In] IShellItemArray itemArray, out uint processId);
        }
    }
}
